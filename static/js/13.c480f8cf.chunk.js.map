{"version":3,"sources":["Views/Register.tsx","Model/Controller.tsx","Store/User.tsx","Store/Auth.tsx","Store/Image.tsx","Store/History.tsx","Store/index.tsx","Components/Header.tsx","Components/Layout.tsx"],"names":["Wrapper","styled","div","StyleH1","h1","layout","labelCol","span","wrapperCol","tailLayout","offset","Register","observer","AuthStore","useStore","history","useHistory","validators","userName","rule","value","test","Promise","reject","length","resolve","name","initialValues","remember","onFinish","values","console","log","setUserName","username","setPassWorld","password","then","push","catch","onFinishFailed","errorInfo","Item","label","rules","required","message","validator","min","max","Password","getFieldValue","type","htmlType","AV","init","appId","appKey","serverURL","Auth","register","user","User","setUsername","setPassword","signUp","error","login","logIn","response","logout","logOut","err","getCurrent","current","Uploader","add","file","fileName","item","Object","avFile","File","set","save","serveFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","this","currentUser","observable","action","passWord","UserStore","pullUser","resetUser","filename","newFile","isUpLoading","finally","newList","list","concat","isLoading","append","hasMore","success","context","createContext","ImageStore","HistoryStore","useContext","Text","StyledEntry","StyleNavLink","NavLink","Header","useEffect","to","activeClassName","exact","attributes","onClick","Main","Layout","props","children"],"mappings":"qiBAUA,IAAMA,EAAUC,IAAOC,IAAV,KAQPC,EAAUF,IAAOG,GAAV,KAIPC,EAAS,CACbC,SAAU,CAACC,KAAM,GACjBC,WAAY,CAACD,KAAM,KAEfE,EAAa,CACjBD,WAAY,CAACE,OAAQ,EAAGH,KAAM,KAiBzBI,EAAWC,aAAU,WAAM,IACzBC,EAAcC,cAAdD,UACDE,EAAWC,cAqBXC,EAAa,CACjBC,SADiB,SACRC,EAAYC,GACnB,MAAI,KAAKC,KAAKD,GAAeE,QAAQC,OAAO,wFACxCH,EAAMI,OAAS,GAAKJ,EAAMI,OAAS,GAAWF,QAAQC,OAAO,+EAC1DD,QAAQG,YAcnB,OACE,kBAAC,IAAD,KACE,kBAACzB,EAAD,KACE,kBAACG,EAAD,qBACA,kBAAC,IAAD,iBACME,EADN,CAEEqB,KAAK,QACLC,cAAe,CAACC,UAAU,GAC1BC,SA7CS,SAACC,GAChBC,QAAQC,IAAI,WAAYF,GACxBjB,EAAUoB,YAAYH,EAAOI,UAC7BrB,EAAUsB,aAAaL,EAAOM,UAC9BvB,EAAUF,WACP0B,MAAK,WACJN,QAAQC,IAAI,4DACZjB,EAAQuB,KAAK,SACZC,OAAM,WACTR,QAAQC,IAAI,oEAqCRQ,eA9Be,SAACC,GACtBV,QAAQC,IAAI,UAAWS,MA+BjB,kBAAC,IAAKC,KAAN,CACEC,MAAM,qBACNjB,KAAK,WACLkB,MACE,CACE,CACEC,UAAU,EAAMC,QAAS,yCAE3B,CACEC,UAAW9B,EAAWC,YAK5B,kBAAC,IAAD,OAGF,kBAAC,IAAKwB,KAAN,CACEC,MAAM,eACNjB,KAAK,WACLkB,MACE,CACE,CAACC,UAAU,EAAMC,QAAS,mCAC1B,CAACE,IAAK,EAAGF,QAAS,wCAClB,CAACG,IAAK,GAAIH,QAAS,gDAIvB,kBAAC,IAAMI,SAAP,OAEF,kBAAC,IAAKR,KAAN,CACEC,MAAM,uCACNjB,KAAK,gBACLkB,MACE,CACE,CAACC,UAAU,EAAMC,QAAS,mCAxDlB,SAAC,GAAD,IAAEK,EAAF,EAAEA,cAAF,MAAsB,CAC1CJ,UAD0C,SAChC5B,EAAYC,GACpB,OAAKA,GAAS+B,EAAc,cAAgB/B,EAGrCE,QAAQC,OAAO,8CAFbD,QAAQG,eA0DX,kBAAC,IAAMyB,SAAP,OAGF,kBAAC,IAAKR,KAASjC,EACb,kBAAC,IAAD,CAAQ2C,KAAK,UAAUC,SAAS,UAAhC,wB,gCC5IZ,yFAGAC,IAAGC,KAAK,CACNC,MAAO,oCACPC,OAAQ,2BACRC,UAAW,yCAIb,IAAMC,EAAO,CACXC,SADW,SACF1C,EAAkBkB,GACzB,IAAMyB,EAAO,IAAIC,OAGjB,OAFAD,EAAKE,YAAY7C,GACjB2C,EAAKG,YAAa5B,GACX,IAAId,SAAQ,SAACG,EAASF,GAC3BsC,EAAKI,SAAS5B,MAAK,SAAAjB,GAAK,OAAIK,EAAQL,MAAQ,SAAA8C,GAAK,OAAI3C,EAAO2C,UAGhEC,MATW,SASLjD,EAAkBkB,GACtB,OAAO,IAAId,SAAQ,SAACG,EAASF,GAC3BuC,OAAKM,MAAMlD,EAAUkB,GAAUC,MAAK,SAAAgC,GAAQ,OAAI5C,EAAQ4C,MAAW,SAAAH,GAAK,OAAI3C,EAAO2C,UAGvFI,OAdW,WAeTR,OAAKS,SAASlC,MAAK,WACjBN,QAAQC,IAAI,+BACXO,OAAM,SAAAiC,GAAG,OAAIzC,QAAQC,IAAIwC,OAE9BC,WAnBW,WAoBT,OAAOX,OAAKY,YAIVC,EAAW,CACfC,IADe,SACXC,EAAmBC,GACrB,IAAMC,EAAO,IAAIzB,IAAG0B,OAAO,SACrBC,EAAS,IAAI3B,IAAG4B,KAAKJ,EAAUD,GAIrC,OAHAE,EAAKI,IAAI,WAAYL,GACrBC,EAAKI,IAAI,QAAS7B,IAAGQ,KAAKY,WAC1BK,EAAKI,IAAI,MAAOF,GACT,IAAI3D,SAAQ,SAACG,EAASF,GACzBwD,EAAKK,OAAO/C,MAAK,SAAAgD,GACftD,QAAQC,IAAI,4BACZP,EAAQ4D,MACP9C,OAAM,SAAAiC,GACPzC,QAAQC,IAAI,OACZT,EAAOiD,UAKfc,KAlBe,YAkBW,IAAD,IAAnBC,YAAmB,MAAd,EAAc,MAAXC,aAAW,MAAL,GAAK,EACjBC,EAAQ,IAAIC,QAAM,SAMxB,OALAD,EAAME,QAAQ,SACdF,EAAMD,MAAMA,GACZC,EAAMG,KAAKL,EAAKC,GAChBC,EAAMI,WAAW,aACjBJ,EAAMK,QAAQ,QAASxC,IAAGQ,KAAKY,WACxB,IAAIpD,SAAQ,SAACG,EAASF,GAC3BkE,EAAMH,OACHjD,MAAK,SAAA0D,GACJtE,EAAQsE,MACTxD,OAAM,SAAA2B,GAAK,OAAI3C,EAAO2C,Y,iKChDhB,M,4IARX8B,KAAKC,YAActC,IAAKc,e,kCAIxBuB,KAAKC,YAAc,S,8CAPpBC,K,yEAA6B,Q,oCAE7BC,K,0GAIAA,K,yEC2CY,M,wIAzCOzE,GAClBsE,KAAKlE,OAAOZ,SAAWQ,I,mCAGJN,GACnB4E,KAAKlE,OAAOsE,SAAWhF,I,8BAGR,IAAD,OACd,OAAO,IAAIE,SAAQ,SAACG,EAASF,GAC3BoC,IAAKQ,MAAM,EAAKrC,OAAOZ,SAAU,EAAKY,OAAOsE,UAC1C/D,MAAK,SAAAwB,GACJwC,EAAUC,WACV7E,EAAQoC,MACPtB,OAAM,SAAAiC,GACT6B,EAAUE,YACVhF,EAAOiD,W,iCAKO,IAAD,OACjB,OAAO,IAAIlD,SAAQ,SAACG,EAASF,GAC3BoC,IAAKC,SAAS,EAAK9B,OAAOZ,SAAU,EAAKY,OAAOsE,UAC7C/D,MAAK,SAAAwB,GACJwC,EAAUC,WACV7E,EAAQoC,MACPtB,OAAM,SAAAiC,GACT6B,EAAUE,YACVhF,EAAOiD,W,+BAMXb,IAAKW,SACL+B,EAAUE,gB,yCA1CXL,K,wEAAoB,CACnBhF,SAAU,GACVkF,SAAU,O,uCAIXD,K,gHAIAA,K,0GAIAA,K,sGAaAA,K,uGAaAA,K,sECVa,M,sPA1BMzE,GAClBsE,KAAKQ,SAAW9E,I,8BAGF+E,GACdT,KAAKnB,KAAO4B,I,iCAGM,IAAD,OAEjB,OADAT,KAAKU,aAAc,EACZ,IAAIpF,SAAQ,SAACG,EAASF,GAC3BoD,IAASC,IAAI,EAAKC,KAAM,EAAK2B,UAAUnE,MAAK,SAAAgD,GAC1C,EAAKA,UAAYA,EACjB5D,EAAQ4D,MACP9C,OAAM,SAAAiC,GACP,EAAKkC,aAAc,EACnBnF,EAAOiD,MACNmC,SAAQ,kBAAM,EAAKD,aAAc,U,8BAItCV,KAAKU,aAAc,EACnBV,KAAKX,UAAY,S,2CA3BlBa,K,wEAA8B,M,kCAC9BA,K,yEAA+B,Q,uCAC/BA,K,yEAA4B,Q,yCAC5BA,K,yEAAkC,K,uCAElCC,K,2GAIAA,K,wGAIAA,K,sGAYAA,K,8ECeY,M,2LApCbX,MAAQ,G,mDAGOoB,GACbZ,KAAKa,KAAOb,KAAKa,KAAKC,OAAOF,K,6BAGf,IAAD,OACbZ,KAAKe,WAAY,EACjBpC,IAASW,KAAK,CAACC,KAAMS,KAAKT,KAAMC,MAAOQ,KAAKR,QACzCnD,MAAK,SAAAwE,GACJ,EAAKG,OAAOH,GACZ,EAAKtB,OAEDsB,EAAKrF,OAAS,EAAKgE,MACrB,EAAKyB,SAAU,EAEfnE,IAAQoE,QAAQ,+BAGnB3E,OAAM,SAAAiC,GACL1B,IAAQoB,MAAM,+BAEfyC,SAAQ,WACT,EAAKI,WAAY,O,8BAKnBf,KAAKa,KAAO,GACZb,KAAKe,WAAY,EACjBf,KAAKiB,SAAU,EACfjB,KAAKT,KAAO,M,uCApCbW,K,wEAAkB,M,kCAClBA,K,yEAAkB,K,uCAClBA,K,yEAAuB,K,qCACvBA,K,yEAAqB,K,kCAIrBC,K,mGAIAA,K,kGAqBAA,K,qEC/BGgB,EAAUC,wBACd,CACEvG,YACAwF,YACAgB,aACAC,iBAIUxG,EAAW,kBAAKyG,qBAAWJ,K,snCCLzC,IAAMnH,EAAUC,IAAOC,IAAV,KA0BPsH,EAAOvH,IAAOC,IAAV,KAOJuH,EAAcxH,IAAOC,IAAV,KAiBXwH,EAAezH,YAAO0H,IAAP1H,CAAH,KAQZ2H,EAAShH,aAAS,WAAO,IAAD,EACGE,cAAxBD,EADqB,EACrBA,UAAWwF,EADU,EACVA,UACZtF,EAAUC,cAehB,OAHA6G,qBAAU,WACRxB,EAAUC,aACT,CAACD,IAEF,6BACE,kBAACrG,EAAD,KACE,kBAACwH,EAAD,cACA,kBAACE,EAAD,CAAcI,GAAG,QAAQC,gBAAgB,WAAWC,OAAK,GAAzD,gBACA,kBAACN,EAAD,CAAcI,GAAG,WAAWC,gBAAgB,YAA5C,4BACA,kBAACL,EAAD,CAAcI,GAAG,SAASC,gBAAgB,YAA1C,gBACA,kBAACN,EAAD,KAEIpB,EAAUJ,YACR,oCACE,8BAAOI,EAAUJ,YAAYgC,WAAW/F,UACxC,kBAAC,IAAD,CAAQkB,KAAK,UAAU8E,QA1BhB,WACnBrH,EAAUyD,SACVvD,EAAQuB,KAAK,aAwBD,mBAGF,oCACE,kBAAC,IAAD,CAAQc,KAAK,UAAU8E,QAzBjB,WAClBnH,EAAQuB,KAAK,aAwBD,kBACA,kBAAC,IAAD,CAAQc,KAAK,UAAU8E,QAvBd,WACrBnH,EAAQuB,KAAK,gBAsBD,yB,iPChGhB,IAAMtC,EAAUC,IAAOC,IAAV,KAMPiI,EAAOlI,IAAOC,IAAV,KAIJkI,EAASxH,aAAS,SAACyH,GACrB,OACE,kBAAC,EAAD,KACE,kBAACF,EAAD,KACGE,EAAMC,UAET,kBAACV,EAAD","file":"static/js/13.c480f8cf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Layout} from \"../Components/Layout\";\r\nimport {Form, Input, Button} from \"antd\";\r\nimport styled from \"styled-components\";\r\nimport {Rule} from \"antd/lib/form\";\r\nimport {useStore} from \"../Store\";\r\nimport { useHistory } from 'react-router-dom'\r\nimport {observer} from \"mobx-react\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\nwidth: 600px;\r\nmargin: 100px auto;\r\nbox-shadow: 2px 2px 4px 0 rgba(0,0,0,0.2);\r\npadding: 20px;\r\nbackground:rgba(241, 243, 244,0.25) ;\r\n\r\n`;\r\nconst StyleH1 = styled.h1`\r\ntext-align: center;\r\n`;\r\n\r\nconst layout = {\r\n  labelCol: {span: 8},\r\n  wrapperCol: {span: 16},\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: {offset: 8, span: 16},\r\n};\r\n\r\ntype InternalNamePath = (string | number)[];\r\ntype  Store = {\r\n  [name: string]: any;\r\n}\r\ntype ValidateErrorEntity = {\r\n  values: Store;\r\n  errorFields: {\r\n    name: InternalNamePath;\r\n    errors: string[];\r\n  }[];\r\n  outOfDate: boolean;\r\n}\r\n\r\n\r\nconst  Register = observer (()=> {\r\n  const {AuthStore}  = useStore()\r\n  const history  = useHistory()\r\n\r\n  const onFinish = (values: Store) => {\r\n    console.log(\"Success:\", values);\r\n    AuthStore.setUserName(values.username)\r\n    AuthStore.setPassWorld(values.password)\r\n    AuthStore.Register()\r\n      .then(() => {\r\n        console.log('注册成功, 跳转到首页')\r\n        history.push('./')\r\n      }).catch(() => {\r\n      console.log('注册失败，什么都不做')\r\n    });\r\n\r\n\r\n  };\r\n\r\n\r\n  const onFinishFailed = (errorInfo: ValidateErrorEntity) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n  const validators = {\r\n    userName(rule: Rule, value: string) {\r\n      if (/\\W/.test(value)) return Promise.reject(\"不能出现字母下划线以外的字符\");\r\n      if (value.length < 4 || value.length > 10) return Promise.reject(\"用户名长度只能在4至10个字符\");\r\n      return Promise.resolve();\r\n    }\r\n  };\r\n  // @ts-ignore\r\n  const checkPassword = ({getFieldValue}) => ({\r\n    validator(rule: Rule, value: string) {\r\n      if (!value || getFieldValue(\"password\") === value) {\r\n        return Promise.resolve();\r\n      }\r\n      return Promise.reject(\"两次密码不匹配\");\r\n    }\r\n  });\r\n\r\n  // const {AuthStore} = useStore()\r\n  return (\r\n    <Layout>\r\n      <Wrapper>\r\n        <StyleH1>注册</StyleH1>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          initialValues={{remember: true}}\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"用户名\"\r\n            name=\"username\"\r\n            rules={\r\n              [\r\n                {\r\n                  required: true, message: \"请输入用户名!\",\r\n                },\r\n                {\r\n                  validator: validators.userName\r\n                }\r\n              ]\r\n            }\r\n          >\r\n            <Input/>\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"密码\"\r\n            name=\"password\"\r\n            rules={\r\n              [\r\n                {required: true, message: \"请输入密码!\"},\r\n                {min: 4, message: \"最少输入四位\"},\r\n                {max: 16, message: \"最多输入十六位\"}\r\n              ]\r\n            }\r\n          >\r\n            <Input.Password/>\r\n          </Form.Item>\r\n          <Form.Item\r\n            label=\"再次确认密码\"\r\n            name=\"checkPassword\"\r\n            rules={\r\n              [\r\n                {required: true, message: \"请确认密码!\"},\r\n                checkPassword\r\n              ]\r\n            }\r\n          >\r\n            <Input.Password/>\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              注册\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Wrapper>\r\n\r\n    </Layout>\r\n  );\r\n})\r\n\r\nexport {Register};","import AV, {Query, User} from \"leancloud-storage\";\r\nimport {message} from 'antd'\r\n\r\nAV.init({\r\n  appId: \"YId6yG8LcyK0CGwLFaYIgYgf-gzGzoHsz\",\r\n  appKey: \"0IwcJacKUg9qaHmGBJrjwCC6\",\r\n  serverURL: \"https://yid6yg8l.lc-cn-n1-shared.com\"\r\n});\r\n\r\n\r\nconst Auth = {\r\n  register(userName: string, password: string) {\r\n    const user = new User();\r\n    user.setUsername(userName);\r\n    user.setPassword((password));\r\n    return new Promise((resolve, reject) => {\r\n      user.signUp().then(value => resolve(value), error => reject(error));\r\n    });\r\n  },\r\n  login(userName: string, password: string) {\r\n    return new Promise((resolve, reject) => {\r\n      User.logIn(userName, password).then(response => resolve(response), error => reject(error));\r\n    });\r\n  },\r\n  logout() {\r\n    User.logOut().then(() => {\r\n      console.log(\"注销成功\");\r\n    }).catch(err => console.log(err));\r\n  },\r\n  getCurrent() {\r\n    return User.current();\r\n  }\r\n};\r\n\r\nconst Uploader = {\r\n  add(file: File | null, fileName: string) {\r\n    const item = new AV.Object(\"Image\");\r\n    const avFile = new AV.File(fileName, file);\r\n    item.set(\"filename\", fileName);\r\n    item.set(\"owner\", AV.User.current());\r\n    item.set(\"url\", avFile);\r\n    return new Promise((resolve, reject) => {\r\n        item.save().then(serveFile => {\r\n          console.log(\"上传成功\");\r\n          resolve(serveFile);\r\n        }).catch(err => {\r\n          console.log(\"err\");\r\n          reject(err);\r\n        });\r\n      }\r\n    );\r\n  },\r\n  find({page=0, limit=10}) {\r\n    const query = new Query('Image');\r\n    query.include('owner');\r\n    query.limit(limit);\r\n    query.skip(page*limit);\r\n    query.descending('createdAt');\r\n    query.equalTo('owner', AV.User.current());\r\n    return new Promise((resolve, reject) => {\r\n      query.find()\r\n        .then(results => {\r\n          resolve(results);})\r\n        .catch(error => reject(error))\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport {Auth, Uploader};","import {observable, action} from \"mobx\";\r\nimport {Auth} from \"../Model/Controller\";\r\n\r\nclass UserStore {\r\n  @observable currentUser:any = null;\r\n\r\n  @action pullUser() {\r\n    this.currentUser = Auth.getCurrent();\r\n  }\r\n\r\n  @action resetUser() {\r\n    this.currentUser = null;\r\n  }\r\n}\r\n\r\nexport default new UserStore();","import {action, observable} from \"mobx\";\r\nimport UserStore from \"./User\";\r\nimport {Auth} from \"../Model/Controller\";\r\n\r\n\r\nclass AuthStore {\r\n  @observable values = {\r\n    userName: \"\",\r\n    passWord: \"\"\r\n  };\r\n\r\n\r\n  @action setUserName(name: string) {\r\n    this.values.userName = name;\r\n  }\r\n\r\n  @action setPassWorld(value: string) {\r\n    this.values.passWord = value;\r\n  }\r\n\r\n  @action Login() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.login(this.values.userName, this.values.passWord)\r\n        .then(user => {\r\n          UserStore.pullUser();\r\n          resolve(user);\r\n        }).catch(err => {\r\n        UserStore.resetUser();\r\n        reject(err);\r\n      })\r\n    });\r\n  }\r\n\r\n  @action Register() {\r\n    return new Promise((resolve, reject) => {\r\n      Auth.register(this.values.userName, this.values.passWord)\r\n        .then(user => {\r\n          UserStore.pullUser();\r\n          resolve(user);\r\n        }).catch(err => {\r\n        UserStore.resetUser();\r\n        reject(err);\r\n      })\r\n    });\r\n  }\r\n\r\n  @action logout() {\r\n    Auth.logout();\r\n    UserStore.resetUser();\r\n  }\r\n}\r\n\r\n\r\nexport default new AuthStore();","import {observable, action} from \"mobx\";\r\nimport {Uploader} from \"../Model/Controller\";\r\n\r\n\r\nclass Image {\r\n  @observable filename: string = \"\";\r\n  @observable file: File | null = null;\r\n  @observable serveFile: any = null;\r\n  @observable isUpLoading: boolean = false;\r\n\r\n  @action setFileName(name: string) {\r\n    this.filename = name;\r\n  }\r\n\r\n  @action setFile(newFile: File) {\r\n    this.file = newFile;\r\n  }\r\n\r\n  @action saveFile() {\r\n    this.isUpLoading = true;\r\n    return new Promise((resolve, reject) => {\r\n      Uploader.add(this.file, this.filename).then(serveFile => {\r\n        this.serveFile = serveFile;\r\n        resolve(serveFile)\r\n      }).catch(err => {\r\n        this.isUpLoading = false;\r\n        reject(err)\r\n      }).finally(() => this.isUpLoading = false);\r\n    });\r\n  }\r\n  @action reset() {\r\n    this.isUpLoading = false;\r\n    this.serveFile = null;\r\n  }\r\n}\r\n\r\nexport default  new Image()","import {action, observable} from \"mobx\";\r\nimport {Uploader} from \"../Model/Controller\";\r\nimport {message} from'antd'\r\n\r\nclass History {\r\n  @observable list = [];\r\n  @observable page = 0;\r\n  @observable isLoading = false;\r\n  @observable hasMore = true;\r\n  limit = 10;\r\n\r\n\r\n  @action append(newList: any) {\r\n    this.list = this.list.concat(newList);\r\n  }\r\n\r\n  @action find() {\r\n    this.isLoading = true;\r\n    Uploader.find({page: this.page, limit: this.limit})\r\n      .then(list => {\r\n        this.append(list);\r\n        this.page++;\r\n        // @ts-ignore\r\n        if (list.length < this.limit) {\r\n          this.hasMore = false;\r\n        }else{\r\n          message.success('加载成功')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error('加载失败')\r\n    })\r\n      .finally(() => {\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  @action reset() {\r\n    this.list = [];\r\n    this.isLoading = false;\r\n    this.hasMore = true;\r\n    this.page = 0;\r\n  }\r\n}\r\n\r\nexport default new History();","import {createContext, useContext} from \"react\";\r\nimport AuthStore from \"./Auth\";\r\nimport UserStore from './User';\r\nimport ImageStore from './Image'\r\nimport HistoryStore from \"./History\";\r\n\r\nconst context = createContext(\r\n  {\r\n    AuthStore ,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n\r\n  }\r\n);\r\nexport  const useStore = ()=> useContext(context)\r\n","import React, {useEffect,} from \"react\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {Button} from \"antd\";\r\nimport {useStore} from \"../Store\";\r\nimport {observer} from \"mobx-react\";\r\n\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\ntext-align: center;\r\nalign-items: center;\r\npadding: 20px 120px ; \r\nbox-shadow: 2px 2px 2px 0 rgba(0,0,0,0.1);\r\n @media (max-width: 500px) {\r\n padding: 0 0 ;\r\n  }\r\n  @media (max-width: 300px){\r\n  font-size: 5px;\r\n}\r\n\r\n\r\n>a{\r\ntext-decoration:none;\r\nfont-size: 2em;\r\nmargin: 0 20px;\r\npadding: 0 10px ;\r\ncolor:black;\r\nborder-radius: 10px ;\r\n&.selected{\r\nbackground: #b8dbaa;\r\n}\r\n}\r\n`;\r\nconst Text = styled.div`\r\nfont-size: 50px;\r\ncolor: #4d57af;\r\n @media (max-width: 500px) {\r\n display: none;\r\n  }\r\n`;\r\nconst StyledEntry = styled.div`\r\nmargin-left: auto;\r\n @media (max-width: 500px) {\r\n margin: 0 0 ;\r\n padding: 0 0 ;\r\n  }\r\n\r\n>span{\r\nfont-size: 30px;\r\n}\r\n>Button{\r\nmargin: 0 20px;\r\nbackground:#b8dbaa;\r\nborder: none;\r\n }\r\n`;\r\n\r\nconst StyleNavLink = styled(NavLink)`\r\n:hover{\r\nbackground: #b8dbaa;\r\ncolor: black;\r\n}\r\n`\r\n\r\n\r\nconst Header = observer(() => {\r\n  const {AuthStore, UserStore} = useStore();\r\n  const history = useHistory();\r\n  const handleLogout = () => {\r\n    AuthStore.logout();\r\n    history.push(\"./login\");\r\n  };\r\n\r\n  const handleLogin = () => {\r\n    history.push(\"./login\");\r\n  };\r\n  const handleRegister = () => {\r\n    history.push(\"./register\");\r\n  };\r\n  useEffect(() => {\r\n    UserStore.pullUser();\r\n  }, [UserStore]);\r\n  return (\r\n    <div>\r\n      <Wrapper>\r\n        <Text>Panda</Text>\r\n        <StyleNavLink to='/home' activeClassName='selected' exact>首页</StyleNavLink>\r\n        <StyleNavLink to='/history' activeClassName='selected'>上传历史</StyleNavLink>\r\n        <StyleNavLink to='/about' activeClassName='selected'>关于</StyleNavLink>\r\n        <StyledEntry>\r\n          {\r\n            UserStore.currentUser ?\r\n              <>\r\n                <span>{UserStore.currentUser.attributes.username}</span>\r\n                <Button type=\"primary\" onClick={handleLogout}> 注销 </Button>\r\n              </>\r\n              :\r\n              <>\r\n                <Button type=\"primary\" onClick={handleLogin}> 登录 </Button>\r\n                <Button type=\"primary\" onClick={handleRegister}> 注册 </Button>\r\n              </>\r\n          }\r\n        </StyledEntry>\r\n\r\n      </Wrapper>\r\n\r\n    </div>\r\n  );\r\n});\r\n\r\nexport {Header};","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Header} from \"./Header\";\r\nimport {observer} from \"mobx-react\";\r\n\r\n\r\nconst Wrapper = styled.div`\r\nheight: 100vh;\r\ndisplay: flex;\r\nflex-direction: column-reverse;\r\noverflow: scroll;\r\n`;\r\nconst Main = styled.div`\r\nflex-grow: 1;\r\n`;\r\n\r\nconst Layout = observer((props: any) => {\r\n    return (\r\n      <Wrapper>\r\n        <Main>\r\n          {props.children}\r\n        </Main>\r\n        <Header/>\r\n      </Wrapper>\r\n    );\r\n  }\r\n);\r\n\r\nexport {Layout};"],"sourceRoot":""}